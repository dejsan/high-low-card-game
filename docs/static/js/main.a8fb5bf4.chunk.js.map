{"version":3,"sources":["assets/sound/click.mp3","assets/sound/music.mp3","assets/images/table_background.jpg","constants.js","reducers/game.js","reducers/index.js","store.js","actions/game.js","containers/Canvas.jsx","components/Button.jsx","components/Input.jsx","components/Message.jsx","containers/GUI.jsx","containers/Game.jsx","views/App.jsx","index.jsx"],"names":["module","exports","ACTION","BET_TYPE","MESSAGE_TYPE","CANVAS_SIZE","SPRITESHEET_URL","CARD_BACK","CARD_FRONT","initialState","enableBet","balance","bet","betType","deck","currentCard","drawnCards","messageType","disableResetGame","disableBetLoHi","disablePlaceBetMoney","disableNewGame","combineReducers","game","state","action","type","constants","currentDeck","currentDrawnCards","randomCard","Math","floor","random","length","newDrawnCards","newDeck","filter","i","data","startOfGame","newBalance","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","composedEnhancers","compose","applyMiddleware","music","Audio","Music","loop","volume","drawCard","nextRound","placeBetMoney","placeBet","showMessage","newGame","resetGame","gameOver","playSoundClick","ClickSound","play","toggleBackgroundMusic","paused","pause","Canvas","props","setup","pickCardsColor","app","loader","add","tableBackgroundImg","load","initialize","setState","resourcesLoaded","drawTableBackground","drawCurrentCard","drawDeck","drawDrawnCards","isCurrentCardDrawn","sprites","isDeckDrawn","currentCardBack","cardBack","currentCardFront","cardFront","cardName","texture","PIXI","from","tableBackground","resources","stage","addChild","spritesheet","textures","anchor","set","x","screen","width","y","height","startX","startY","drawnCardsContainer","forEach","card","index","drawnCard","removeFromCanvas","object","name","removeChild","updateCurrentCard","pixiRef","React","createRef","pixiElement","transparent","this","current","appendChild","view","prevProps","currentCardDrawn","deckDrawn","isLastRound","shouldRemoveDrawnCards","id","ref","Component","connect","Button","handleClick","bind","e","preventDefault","clickSound","clickAction","buttonNotDisabled","disabled","text","className","onClick","Input","maxLengthCheck","readOnly","target","value","maxLength","slice","handleBlur","min","parseInt","max","handleChange","inputValue","step","onChange","onInput","onBlur","Message","playSound","color","messageContentClasses","GUI","renderMessage","dispatch","bindActionCreators","Game","shouldDrawCard","shouldShowMessage","shouldResetGame","isBetWin","setTimeout","App","store","createStore","persistor","persistStore","returnStoreAndPersistor","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a8fb5bf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.311e0376.mp3\";","module.exports = __webpack_public_path__ + \"static/media/music.7ae8136d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/table_background.49dc56c3.jpg\";","export const ACTION = {\r\n  DRAW_CARD: \"game/DRAW_CARD\",\r\n  NEXT_ROUND: \"game/NEXT_ROUND\",\r\n  PLACE_BET_MONEY: \"game/PLACE_BET_MONEY\",\r\n  PLACE_BET: \"game/PLACE_BET\",\r\n  SHOW_MESSAGE: \"game/SHOW_MESSAGE\",\r\n  NEW_GAME: \"game/NEW_GAME\",\r\n  RESET_GAME: \"game/RESET_GAME\",\r\n  GAME_OVER: \"game/GAME_OVER\",\r\n  PLAY_SOUND_CLICK: \"game/PLAY_SOUND_CLICK\",\r\n  TOGGLE_BACKGROUND_MUSIC: \"game/TOGGLE_BACKGROUND_MUSIC\",\r\n};\r\n\r\nexport const INIT_GAME_STATE = {\r\n  enableBet: true,\r\n  balance: 100,\r\n  bet: 10,\r\n  betType: null,\r\n  deck: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\r\n  currentCard: null,\r\n  drawnCards: [],\r\n  messageType: null,\r\n  disableResetGame: false,\r\n  disableBetLoHi: false,\r\n  disablePlaceBetMoney: false,\r\n  disableNewGame: true,\r\n};\r\n\r\nexport const BET_TYPE = {\r\n  hi: \"hi\",\r\n  lo: \"lo\",\r\n};\r\n\r\nexport const BET_MULTIPLIER = 2;\r\n\r\nexport const MESSAGE_DELAY = 500;\r\nexport const MESSAGE_TYPE = {\r\n  betWin: \"betWin\",\r\n  betLose: \"betLose\",\r\n  gameWin: \"gameWin\",\r\n  resetGame: \"resetGame\",\r\n};\r\n\r\nexport const CANVAS_SIZE = {\r\n  width: 626,\r\n  height: 362,\r\n};\r\n\r\nexport const SPRITESHEET_URL = \"assets/spritesheets/cards.json\";\r\n\r\nexport const CARD_BACK = [\r\n  \"BackBlue_1.png\",\r\n  \"BackBlue_2.png\",\r\n  \"BackGrey_1.png\",\r\n  \"BackGrey_2.png\",\r\n  \"BackRed_1.png\",\r\n  \"BackRed_2.png\",\r\n];\r\n\r\nexport const CARD_FRONT = [\"Clubs_\", \"Diamond_\", \"Hearts_\", \"Spades_\"];\r\n","import * as constants from \"../constants\";\r\n\r\nconst initialState = constants.INIT_GAME_STATE;\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case constants.ACTION.DRAW_CARD:\r\n      const { deck: currentDeck, drawnCards: currentDrawnCards } = state;\r\n\r\n      const randomCard = currentDeck\r\n        ? currentDeck[Math.floor(Math.random() * currentDeck.length)]\r\n        : null;\r\n\r\n      const newDrawnCards = state.currentCard\r\n        ? [...currentDrawnCards, state.currentCard]\r\n        : state.drawnCards;\r\n\r\n      const newDeck = randomCard\r\n        ? currentDeck.filter((i) => i !== randomCard)\r\n        : state.deck;\r\n\r\n      return {\r\n        ...state,\r\n        deck: newDeck,\r\n        currentCard: randomCard,\r\n        drawnCards: newDrawnCards,\r\n      };\r\n\r\n    case constants.ACTION.NEXT_ROUND:\r\n      return {\r\n        ...state,\r\n        bet: state.bet * constants.BET_MULTIPLIER,\r\n        messageType: null,\r\n        betType: null,\r\n        disableBetLoHi: false,\r\n        disableNewGame: false,\r\n      };\r\n\r\n    case constants.ACTION.PLACE_BET_MONEY:\r\n      return {\r\n        ...state,\r\n        bet: action.data.bet,\r\n      };\r\n\r\n    case constants.ACTION.PLACE_BET:\r\n      const startOfGame = state.disablePlaceBetMoney === false;\r\n      const newBalance = startOfGame\r\n        ? state.balance - state.bet\r\n        : state.balance;\r\n\r\n      return {\r\n        ...state,\r\n        betType: action.data.betType,\r\n        disableBetLoHi: true,\r\n        balance: newBalance,\r\n        disablePlaceBetMoney: true,\r\n        disableNewGame: true,\r\n      };\r\n\r\n    case constants.ACTION.SHOW_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messageType: action.data.messageType,\r\n      };\r\n\r\n    case constants.ACTION.NEW_GAME:\r\n      return {\r\n        ...initialState,\r\n        balance: state.balance + state.bet,\r\n      };\r\n\r\n    case constants.ACTION.RESET_GAME:\r\n      return initialState;\r\n\r\n    case constants.ACTION.GAME_OVER:\r\n      return {\r\n        ...initialState,\r\n        balance: state.balance,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux'\r\nimport game from './game'\r\n\r\nexport default combineReducers({\r\n    game\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst enhancers = [];\r\nconst middleware = [];\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\n  if (typeof devToolsExtension === \"function\") {\r\n    enhancers.push(devToolsExtension());\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer, initialState, composedEnhancers);\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import * as constants from \"../constants\";\r\nimport ClickSound from \"../assets/sound/click.mp3\";\r\nimport Music from \"../assets/sound/music.mp3\";\r\n\r\nconst music = new Audio(Music);\r\nmusic.loop = true;\r\nmusic.volume = 0.5;\r\n\r\nexport const drawCard = () => {\r\n  return {\r\n    type: constants.ACTION.DRAW_CARD,\r\n  };\r\n};\r\n\r\nexport const nextRound = () => {\r\n  return {\r\n    type: constants.ACTION.NEXT_ROUND,\r\n  };\r\n};\r\n\r\nexport const placeBetMoney = (bet) => {\r\n  return {\r\n    type: constants.ACTION.PLACE_BET_MONEY,\r\n    data: { bet },\r\n  };\r\n};\r\n\r\nexport const placeBet = (betType) => {\r\n  return {\r\n    type: constants.ACTION.PLACE_BET,\r\n    data: { betType },\r\n  };\r\n};\r\n\r\nexport const showMessage = (messageType) => {\r\n  return {\r\n    type: constants.ACTION.SHOW_MESSAGE,\r\n    data: { messageType },\r\n  };\r\n};\r\n\r\nexport const newGame = () => {\r\n  return {\r\n    type: constants.ACTION.NEW_GAME,\r\n  };\r\n};\r\n\r\nexport const resetGame = () => {\r\n  return {\r\n    type: constants.ACTION.RESET_GAME,\r\n  };\r\n};\r\n\r\nexport const gameOver = () => {\r\n  return {\r\n    type: constants.ACTION.GAME_OVER,\r\n  };\r\n};\r\n\r\nexport const playSoundClick = () => {\r\n  const sound = new Audio(ClickSound);\r\n  sound.play();\r\n  return {\r\n    type: constants.ACTION.PLAY_SOUND_CLICK,\r\n  };\r\n};\r\n\r\nexport const toggleBackgroundMusic = () => {\r\n  if (music.paused) {\r\n    music.play();\r\n  } else {\r\n    music.pause();\r\n  }\r\n  return {\r\n    type: constants.ACTION.TOGGLE_BACKGROUND_MUSIC,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport * as constants from \"../constants\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../assets/css/Canvas.css\";\r\n\r\nimport tableBackgroundImg from \"../assets/images/table_background.jpg\";\r\n\r\nclass Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resourcesLoaded: false,\r\n    };\r\n    this.pixiRef = React.createRef();\r\n    this.pixiElement = null;\r\n    this.app = new PIXI.Application({\r\n      width: constants.CANVAS_SIZE.width,\r\n      height: constants.CANVAS_SIZE.height,\r\n      transparent: true,\r\n    });\r\n\r\n    this.sprites = {};\r\n    this.cardBack = constants.CARD_BACK;\r\n    this.cardFront = constants.CARD_FRONT;\r\n    this.currentCardBack = \"\";\r\n    this.currentCardFront = \"\";\r\n  }\r\n  componentDidMount() {\r\n    this.pixiElement = this.pixiRef.current;\r\n    this.pixiElement.appendChild(this.app.view);\r\n    this.setup();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const { deck, currentCard, drawnCards } = this.props;\r\n    const { resourcesLoaded } = this.state;\r\n\r\n    const currentCardDrawn = this.sprites.currentCard;\r\n    const deckDrawn = this.sprites.deck;\r\n    const isLastRound = deck.length === 0 && deck !== prevProps.deck;\r\n    const drawDrawnCards =\r\n      drawnCards.length > 0 && drawnCards !== prevProps.drawnCards;\r\n    const shouldRemoveDrawnCards =\r\n      drawnCards.length === 0 &&\r\n      prevProps.drawnCards.length > 0 &&\r\n      drawnCards !== prevProps.drawnCards;\r\n\r\n    if (resourcesLoaded) {\r\n      if (\r\n        currentCardDrawn &&\r\n        currentCard &&\r\n        currentCard !== prevProps.currentCard\r\n      ) {\r\n        this.updateCurrentCard();\r\n        if (!deckDrawn) {\r\n          this.pickCardsColor();\r\n          this.drawDeck();\r\n        }\r\n      }\r\n\r\n      if (deckDrawn && isLastRound) {\r\n        this.removeFromCanvas(this.sprites.deck, \"deck\");\r\n      }\r\n\r\n      if (shouldRemoveDrawnCards) {\r\n        this.removeFromCanvas(\r\n          this.sprites.drawnCardsContainer,\r\n          \"drawnCardsContainer\"\r\n        );\r\n      }\r\n\r\n      if (drawDrawnCards) {\r\n        this.drawDrawnCards();\r\n      }\r\n    }\r\n  }\r\n  setup = () => {\r\n    this.pickCardsColor();\r\n    this.app.loader\r\n      .add(\"images/tableBackground\", tableBackgroundImg)\r\n      .add(constants.SPRITESHEET_URL)\r\n      .load(this.initialize);\r\n  };\r\n  initialize = () => {\r\n    this.setState({\r\n      resourcesLoaded: true,\r\n    });\r\n    this.drawTableBackground();\r\n    this.drawCurrentCard();\r\n    this.drawDeck();\r\n    this.drawDrawnCards();\r\n  };\r\n\r\n  pickCardsColor = () => {\r\n    const { currentCard } = this.props;\r\n\r\n    const isCurrentCardDrawn = this.sprites.currentCard;\r\n    const isDeckDrawn = this.sprites.deck;\r\n\r\n    this.currentCardBack = this.cardBack[\r\n      Math.floor(Math.random() * this.cardBack.length)\r\n    ];\r\n    this.currentCardFront = this.cardFront[\r\n      Math.floor(Math.random() * this.cardFront.length)\r\n    ];\r\n\r\n    if (isCurrentCardDrawn) {\r\n      const cardName = this.currentCardFront + currentCard + \".png\";\r\n      this.sprites.currentCard.texture = PIXI.Texture.from(cardName);\r\n    }\r\n    if (isDeckDrawn) {\r\n      this.sprites.deck.texture = PIXI.Texture.from(this.currentCardFront);\r\n    }\r\n  };\r\n\r\n  drawTableBackground = () => {\r\n    this.sprites.tableBackground = new PIXI.Sprite(\r\n      this.app.loader.resources[\"images/tableBackground\"].texture\r\n    );\r\n    this.app.stage.addChild(this.sprites.tableBackground);\r\n  };\r\n  drawCurrentCard = () => {\r\n    const { currentCard } = this.props;\r\n    const cardName = this.currentCardFront + currentCard + \".png\";\r\n\r\n    this.sprites.currentCard = new PIXI.Sprite(\r\n      this.app.loader.resources[constants.SPRITESHEET_URL].spritesheet.textures[\r\n        cardName\r\n      ]\r\n    );\r\n    this.sprites.currentCard.anchor.set(0.5);\r\n    this.sprites.currentCard.x = this.app.screen.width * 0.572;\r\n    this.sprites.currentCard.y = this.app.screen.height * 0.62;\r\n    this.app.stage.addChild(this.sprites.currentCard);\r\n  };\r\n  drawDeck = () => {\r\n    this.sprites.deck = new PIXI.Sprite(\r\n      this.app.loader.resources[constants.SPRITESHEET_URL].spritesheet.textures[\r\n        this.currentCardBack\r\n      ]\r\n    );\r\n    this.sprites.deck.anchor.set(0.5);\r\n    this.sprites.deck.x = this.app.screen.width * 0.82;\r\n    this.sprites.deck.y = this.app.screen.height * 0.25;\r\n    this.app.stage.addChild(this.sprites.deck);\r\n  };\r\n  drawDrawnCards = () => {\r\n    const { drawnCards } = this.props;\r\n\r\n    const startX = this.app.screen.width * 0.18;\r\n    const startY = this.app.screen.height * 0.25;\r\n\r\n    if (!this.sprites.drawnCardsContainer) {\r\n      this.sprites.drawnCardsContainer = new PIXI.Container();\r\n      this.app.stage.addChild(this.sprites.drawnCardsContainer);\r\n    }\r\n\r\n    drawnCards.forEach((card, index) => {\r\n      const cardName = this.currentCardFront + card + \".png\";\r\n      const drawnCard = new PIXI.Sprite(\r\n        this.app.loader.resources[\r\n          constants.SPRITESHEET_URL\r\n        ].spritesheet.textures[cardName]\r\n      );\r\n      drawnCard.anchor.set(0.5);\r\n      drawnCard.x = startX + 20 * index;\r\n      drawnCard.y = startY;\r\n      this.sprites.drawnCardsContainer.addChild(drawnCard);\r\n    });\r\n  };\r\n\r\n  removeFromCanvas = (object, name) => {\r\n    this.app.stage.removeChild(object);\r\n    delete this.sprites[name];\r\n  };\r\n\r\n  updateCurrentCard = () => {\r\n    const { currentCard } = this.props;\r\n    const cardName = this.currentCardFront + currentCard + \".png\";\r\n\r\n    this.sprites.currentCard.texture = PIXI.Texture.from(cardName);\r\n  };\r\n\r\n  render() {\r\n    return <div id=\"canvas-container\" ref={this.pixiRef} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ game }) => ({\r\n  deck: game.deck,\r\n  currentCard: game.currentCard,\r\n  drawnCards: game.drawnCards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Canvas);\r\n","import React from \"react\";\r\n\r\nimport \"../assets/css/Button.css\";\r\n\r\nclass Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    const { clickSound, clickAction, disabled } = this.props;\r\n    const buttonNotDisabled = !disabled;\r\n\r\n    if (buttonNotDisabled && clickSound) {\r\n      clickSound();\r\n    }\r\n    if (buttonNotDisabled && clickAction) {\r\n      clickAction();\r\n    }\r\n  }\r\n  render() {\r\n    const { id, text, disabled } = this.props;\r\n    let className = \"button\";\r\n    if (disabled) {\r\n      className += \" disabled\";\r\n    }\r\n    return (\r\n      <div className={className} id={id} onClick={this.handleClick}>\r\n        <span>{text}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport \"../assets/css/Input.css\";\r\n\r\nclass Input extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.maxLengthCheck = this.maxLengthCheck.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    e.preventDefault();\r\n    const { clickSound, clickAction, text, readOnly } = this.props;\r\n    const inputValue = e.target.value;\r\n\r\n    if (readOnly) return;\r\n\r\n    if (clickSound) {\r\n      clickSound();\r\n    }\r\n    if (clickAction) {\r\n      switch (text) {\r\n        case \"Bet\":\r\n          clickAction(parseInt(inputValue));\r\n          break;\r\n        default:\r\n          clickAction();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  maxLengthCheck = (e) => {\r\n    const { text, readOnly } = this.props;\r\n\r\n    if (readOnly) return;\r\n\r\n    switch (text) {\r\n      case \"Bet\":\r\n        const length = e.target.value.length;\r\n        const maxLength = e.target.maxLength;\r\n\r\n        if (length > maxLength) {\r\n          e.target.value = e.target.value.slice(0, maxLength);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  handleBlur = (e) => {\r\n    const { text, clickAction, readOnly } = this.props;\r\n\r\n    if (readOnly) return;\r\n\r\n    switch (text) {\r\n      case \"Bet\":\r\n        const min = parseInt(e.target.min);\r\n        const max = parseInt(e.target.max);\r\n        let value = parseInt(e.target.value);\r\n\r\n        if (value < min) {\r\n          e.target.value = min;\r\n          value = min;\r\n        } else if (value > max) {\r\n          e.target.value = max;\r\n          value = max;\r\n        }\r\n        clickAction(parseInt(value));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      id,\r\n      text,\r\n      name,\r\n      value = 1,\r\n      min = 1,\r\n      max = 10000,\r\n      step = 1,\r\n      readOnly,\r\n      maxLength,\r\n    } = this.props;\r\n    return (\r\n      <div id={id}>\r\n        <span>{text}</span>\r\n        <br />\r\n        <input\r\n          type=\"number\"\r\n          name={name}\r\n          min={min}\r\n          max={max}\r\n          step={step}\r\n          value={value}\r\n          readOnly={readOnly}\r\n          maxLength={maxLength}\r\n          onChange={this.handleChange}\r\n          onInput={this.maxLengthCheck}\r\n          onBlur={this.handleBlur}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport \"../assets/css/Message.css\";\r\n\r\nclass Message extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    const { playSound, clickAction } = this.props;\r\n    if (playSound) {\r\n      playSound();\r\n    }\r\n    if (clickAction) {\r\n      clickAction();\r\n    }\r\n  }\r\n  render() {\r\n    const { text, color } = this.props;\r\n\r\n    let messageContentClasses = \"message-content\";\r\n    if (color && color === \"red\") {\r\n      messageContentClasses += \" message-color-red\";\r\n    } else if (color && color === \"green\") {\r\n      messageContentClasses += \" message-color-green\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"message\" onClick={this.handleClick}>\r\n        <div className={messageContentClasses}>\r\n          <p>{text}</p>\r\n          <span>Click to continue...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport * as constants from \"../constants\";\r\n\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  newGame,\r\n  resetGame,\r\n  placeBetMoney,\r\n  placeBet,\r\n  gameOver,\r\n  nextRound,\r\n  playSoundClick,\r\n  toggleBackgroundMusic,\r\n} from \"../actions/game\";\r\n\r\nimport Button from \"../components/Button\";\r\nimport Input from \"../components/Input\";\r\nimport Message from \"../components/Message\";\r\n\r\nimport \"../assets/css/GUI.css\";\r\n\r\nclass GUI extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderMessage = this.renderMessage.bind(this);\r\n  }\r\n  renderMessage() {\r\n    const {\r\n      messageType,\r\n      playSoundClick,\r\n      gameOver,\r\n      nextRound,\r\n      newGame,\r\n      resetGame,\r\n    } = this.props;\r\n\r\n    switch (messageType) {\r\n      case constants.MESSAGE_TYPE.betLose:\r\n        return (\r\n          <Message\r\n            text=\"Bad luck\"\r\n            clickSound={playSoundClick}\r\n            clickAction={gameOver}\r\n            color=\"red\"\r\n          />\r\n        );\r\n      case constants.MESSAGE_TYPE.betWin:\r\n        return (\r\n          <Message\r\n            text=\"Great job\"\r\n            clickSound={playSoundClick}\r\n            clickAction={nextRound}\r\n            color=\"green\"\r\n          />\r\n        );\r\n      case constants.MESSAGE_TYPE.gameWin:\r\n        return (\r\n          <Message\r\n            text=\"Victory! Play again!\"\r\n            clickSound={playSoundClick}\r\n            clickAction={newGame}\r\n            color=\"green\"\r\n          />\r\n        );\r\n      case constants.MESSAGE_TYPE.resetGame:\r\n        return (\r\n          <Message\r\n            text=\"Bad luck + Balance reseted\"\r\n            clickSound={playSoundClick}\r\n            clickAction={resetGame}\r\n            color=\"red\"\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <Message\r\n            text=\"Default Message\"\r\n            clickSound={playSoundClick}\r\n            clickAction={resetGame}\r\n            color=\"red\"\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      balance,\r\n      bet,\r\n      messageType,\r\n      disableResetGame,\r\n      disableBetLoHi,\r\n      disablePlaceBetMoney,\r\n      disableNewGame,\r\n      newGame,\r\n      resetGame,\r\n      placeBetMoney,\r\n      placeBet,\r\n      playSoundClick,\r\n      toggleBackgroundMusic,\r\n    } = this.props;\r\n\r\n    const showMessage = messageType;\r\n\r\n    return (\r\n      <div id=\"gui\">\r\n        {showMessage && this.renderMessage()}\r\n        <div className=\"gui-group\">\r\n          <Button\r\n            text=\"Music\"\r\n            id=\"music\"\r\n            clickSound={playSoundClick}\r\n            clickAction={toggleBackgroundMusic}\r\n          />\r\n          <Button\r\n            text=\"Reset\"\r\n            id=\"reset\"\r\n            clickSound={playSoundClick}\r\n            clickAction={resetGame}\r\n            disabled={disableResetGame}\r\n          />\r\n          <Input\r\n            id=\"balance\"\r\n            text=\"Balance\"\r\n            name=\"balance\"\r\n            value={balance}\r\n            readOnly\r\n          />\r\n        </div>\r\n        <div className=\"gui-group\">\r\n          <Button\r\n            text=\"Low\"\r\n            clickSound={playSoundClick}\r\n            clickAction={() => placeBet(constants.BET_TYPE.lo)}\r\n            disabled={disableBetLoHi}\r\n          />\r\n          <Input\r\n            text=\"Bet\"\r\n            id=\"bet-input\"\r\n            name=\"bet\"\r\n            value={bet}\r\n            min=\"10\"\r\n            max=\"100\"\r\n            step=\"5\"\r\n            maxLength=\"3\"\r\n            clickSound={playSoundClick}\r\n            clickAction={placeBetMoney}\r\n            readOnly={disablePlaceBetMoney}\r\n          />\r\n          <Button\r\n            text=\"High\"\r\n            clickSound={playSoundClick}\r\n            clickAction={() => placeBet(constants.BET_TYPE.hi)}\r\n            disabled={disableBetLoHi}\r\n          />\r\n        </div>\r\n        <div className=\"gui-group\">\r\n          <Button\r\n            text=\"New\"\r\n            clickSound={playSoundClick}\r\n            clickAction={newGame}\r\n            disabled={disableNewGame}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ game }) => ({\r\n  balance: game.balance,\r\n  bet: game.bet,\r\n  messageType: game.messageType,\r\n  disableResetGame: game.disableResetGame,\r\n  disableBetLoHi: game.disableBetLoHi,\r\n  disablePlaceBetMoney: game.disablePlaceBetMoney,\r\n  disableNewGame: game.disableNewGame,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      newGame,\r\n      resetGame,\r\n      placeBetMoney,\r\n      placeBet,\r\n      gameOver,\r\n      nextRound,\r\n      playSoundClick,\r\n      toggleBackgroundMusic,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GUI);\r\n","import React from \"react\";\r\n\r\nimport * as constants from \"../constants\";\r\n\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { drawCard, showMessage, resetGame } from \"../actions/game\";\r\n\r\nimport Canvas from \"./Canvas\";\r\nimport GUI from \"./GUI\";\r\n\r\nimport \"../assets/css/Game.css\";\r\n\r\nclass Game extends React.Component {\r\n  componentDidMount() {\r\n    const { betType, currentCard, drawCard } = this.props;\r\n\r\n    if (!currentCard && !betType) {\r\n      drawCard();\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      balance,\r\n      betType,\r\n      deck,\r\n      currentCard,\r\n      showMessage,\r\n      drawCard,\r\n    } = this.props;\r\n\r\n    const shouldDrawCard =\r\n      (betType && betType !== prevProps.betType) || !currentCard;\r\n\r\n    const shouldShowMessage = currentCard !== prevProps.currentCard && betType;\r\n    const shouldResetGame = balance <= 0;\r\n\r\n    const isLastRound = deck.length === 0;\r\n\r\n    const isBetWin =\r\n      (betType === constants.BET_TYPE.hi &&\r\n        currentCard > prevProps.currentCard) ||\r\n      (betType === constants.BET_TYPE.lo &&\r\n        currentCard < prevProps.currentCard);\r\n\r\n    if (shouldDrawCard) {\r\n      drawCard();\r\n    }\r\n    if (shouldShowMessage) {\r\n      if (isBetWin) {\r\n        if (isLastRound) {\r\n          setTimeout(() => {\r\n            showMessage(constants.MESSAGE_TYPE.gameWin);\r\n          }, constants.MESSAGE_DELAY);\r\n        } else {\r\n          setTimeout(() => {\r\n            showMessage(constants.MESSAGE_TYPE.betWin);\r\n          }, constants.MESSAGE_DELAY);\r\n        }\r\n      } else {\r\n        setTimeout(() => {\r\n          showMessage(constants.MESSAGE_TYPE.betLose);\r\n        }, constants.MESSAGE_DELAY);\r\n      }\r\n    }\r\n    if (shouldResetGame) {\r\n      setTimeout(() => {\r\n        showMessage(constants.MESSAGE_TYPE.resetGame);\r\n      }, constants.MESSAGE_DELAY);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"game\">\r\n        <Canvas />\r\n        <GUI />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ game }) => ({\r\n  balance: game.balance,\r\n  betType: game.betType,\r\n  deck: game.deck,\r\n  currentCard: game.currentCard,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      drawCard,\r\n      showMessage,\r\n      resetGame,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","import React from \"react\";\r\n\r\nimport Game from \"../containers/Game\";\r\n\r\nimport \"../assets/css/App.css\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n        <Game />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport returnStoreAndPersistor from './store'\r\n\r\nimport './assets/css/index.css';\r\nimport App from './views/App';\r\n\r\nconst { store } = returnStoreAndPersistor()\r\n\r\nconst target = document.querySelector('#root')\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    </Provider>,\r\n    target\r\n);\r\n"],"sourceRoot":""}